##适配器模式
    作为两个不兼容的接口之间的桥梁，使得原本由接口类型不兼容而不能一起工作的类可以一起工作，属于一种结构型模式
    分为：类的适配器模式、对象的适配器模式、接口的适配器模式

何时使用：1、系统需要使用现有的类，而现有的类不符合系统的需要。
        2、想要建立一个可以重复使用的类，用于一些彼此之间没有太大关系的类，包括在将来可能将要引入的一些类一起工作，这些源类不一定有一致的接口
        3、通过接口转换，将一个类插入到另一个类系中（比如老虎和飞禽，现在多了一个飞虎，在不增加实体的需求下，增加一个适配器，在里面包一个虎对象，实现飞的接口）

如何解决：继承或依赖

优点：1、可以使任何两个没关联的类一起运行。
    2、提高了类的服用
    3、灵活

缺点：1、可能会比较乱，因为明明看到调用的是A接口，但是内部被适配成了B接口。
    2、因为JAVA是单继承，所以最多只能适配一个适配者类，而且目标类必须是抽象类

